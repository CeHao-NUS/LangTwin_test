[Work 3 Start]
Inputs: Robot, Scene, Task, Perception Function, Controller Function, Results in Work 2.
Outputs: JSON file that summarize the steps to finish the task.

- From the results in Work 1, we obtain the steps to finish the task under each sub task. 
- You need to convert each step as a python dictionary with five keywords: "Perception", "Actionable", "Constraint", "Target",  "Controller".
- When one step has actionable part, for example #actionable# <apple>, the dictionary has "Actionable": ["apple"].
- When one step has constraint part, for example ##prismatic joint constraint##, the dictionary has "Constraint": ["prismatic joint"].
- To detect the actionable part and constriant, choose suitable Perception Function to obtain the "Actionable" and "Constraint".
- The available Perception Functions are provided between [Perception Start] and [Perception End]. Then the dictionary has "Perception": ["function name"].
- The keyword "Target" is the words in the angle bracket, for example <drawer close position>, the dictionary has "Target": ["drawer close position"].
- To implement the movment, choose suitable Controller Function to execute the ""Move", "Grasp" and "Release" under certain constraints.
- The available Controller Functions are provided between [Controller Start] and [Controller End]. Then the dictionary has "Controller": ["function name"].

- The template of the answer is this examples in tripple asterisk and the dict is covered by ```.
***
==== Work 3 ====
```
{
    "Task": "put an apple into a drawer."
    "Sub tasks":[
        { #
            "Sub task": "Open the drawer.",
            "Steps": [
                { #``Move`` to the #actionable# <drawer handle>.  (do not need to include comments after #)
                    "Perception": ["Detect"]
                    "Actionable": ["drawer handle"]
                    "Constraint": []
                    "Target": ["drawer handle"]
                    "Controller": ["Move"]
                }
                { #``Grasp`` the #actionable# <drawer handle>.  (do not need to include comments after #)
                    "Perception": ["Detect"]
                    "Actionable": ["drawer handle"]
                    "Constraint": []
                    "Target": ["drawer handle"]
                    "Controller": ["Graspe"]
                }
                { #``Move`` to <drawer open position> with ##drawer prismatic joint constraint##.  (do not need to include comments after #)
                    "Perception": ["Articulation model"]
                    "Actionable": []
                    "Constraint": ["drawer prismatic joint"]
                    "Target": ["drawer open position"]
                    "Controller": ["Move"]
                }
                { #``Release`` the gripper hand.  (do not need to include comments after #)
                    "Perception": []
                    "Actionable": []
                    "Constraint": []
                    "Target": []
                    "Controller": ["Release"]
                }
            ]
        }

        {
            "Sub task": "Pick the apple and place into the drawer.",
            ... # following are just neglected. Need to complete all in the answer.
        }
    ]
}
```
***
[Work 3 End]